name: build-toolchains-autobuild CI
run-name: build-toolchains-autobuild CI
on:
  push:
    branches:
      - 'main'
  schedule:
    - cron: "0 14 * * *"

jobs:
  linux-llvm-autobuild:
    runs-on: ubuntu-latest
    container: debian:unstable-slim
    env:
      TZ: "Asia/Shanghai"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          repository: 'llvm/llvm-project'
          ref: 'main'
      - name: update package
        run: apt update -y && apt upgrade -y
      - name: install package dependency
        run: |
          apt install tar clang lld libc++-dev libc++abi-dev libclang-rt-dev cmake \
          ninja-build build-essential git python3-dev libtbb-dev \
          libxml2-dev libedit-dev terminfo liblzma-dev swig lua5.3 liblua5.3-dev ocaml ocaml-findlib \
          libctypes-ocaml-dev doxygen ccache -y
      - name: Cache ccache packages
        uses: actions/cache@v3
        with:
          key: llvm-debian-sid-release
          path: |
            ~/.ccache
            ~/.cache
      - name: git clone and make directory and make and package
        run: |
          mkdir build && cd build
          cmake -G "Ninja" \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DLLVM_USE_LINKER=lld \
          -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld;lldb;libc;pstl;mlir;flang"   \
          -DLLVM_TARGETS_TO_BUILD=Native   -DCMAKE_BUILD_TYPE=Release   -DCLANG_DEFAULT_CXX_STDLIB=libc++   \
          -DCLANG_DEFAULT_RTLIB=compiler-rt   -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi;libunwind" \
          -DLIBCXX_USE_COMPILER_RT=YES   -DLIBCXXABI_USE_COMPILER_RT=YES   -DLIBCXXABI_USE_LLVM_UNWINDER=YES \
          -DLIBUNWIND_USE_COMPILER_RT=Yes   -DLIBCXX_ENABLE_PARALLEL_ALGORITHMS=YES    -DPSTL_PARALLEL_BACKEND="tbb" \
          -DCMAKE_BUILD_TYPE=Release -DLLVM_CCACHE_BUILD=ON ../llvm
          cmake --build .
          cmake --build . --target ocaml_doc
          cd ..
          tar -czvf llvm.tar.gz build
          mv llvm.tar.gz /root
      - name: install docker
        run: |
          apt install ca-certificates curl gnupg -y
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo \
          "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
          "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update -y
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          ref: 'main'
          path: "llvm/linux_debian"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: leenhawk/llvm_debian:latest
  linux-gcc-autobuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          ref: 'main'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: gcc/linux_debian
          push: true
          tags: leenhawk/gcc_debian:latest
